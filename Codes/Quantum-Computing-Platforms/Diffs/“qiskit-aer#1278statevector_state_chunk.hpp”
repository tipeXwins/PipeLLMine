490,497c490,494
<     size_t size_required = 2*(sizeof(std::complex<double>) << BaseState::num_qubits_) + (sizeof(std::complex<double>) << BaseState::chunk_bits_)*BaseState::num_local_chunks_;
<     if((size_required >> 20) > Utils::get_system_memory_mb()){
<       throw std::runtime_error(std::string("There is not enough memory to store states"));
<     }
<     else{
<       int_t iChunk;
<       auto state = BaseState::qregs_[0].move_to_vector();
<       state.resize(BaseState::num_local_chunks_ << BaseState::chunk_bits_);
---
>     int_t iChunk;
>     auto state = BaseState::qregs_[0].move_to_vector();
> 
>     //TO DO check memory availability
>     state.resize(BaseState::num_local_chunks_ << BaseState::chunk_bits_);
500,505c497,501
<       for(iChunk=1;iChunk<BaseState::num_local_chunks_;iChunk++){
<         auto tmp = BaseState::qregs_[iChunk].move_to_vector();
<         uint_t j,offset = iChunk << BaseState::chunk_bits_;
<         for(j=0;j<tmp.size();j++){
<           state[offset + j] = tmp[j];
<         }
---
>     for(iChunk=1;iChunk<BaseState::num_local_chunks_;iChunk++){
>       auto tmp = BaseState::qregs_[iChunk].move_to_vector();
>       uint_t j,offset = iChunk << BaseState::chunk_bits_;
>       for(j=0;j<tmp.size();j++){
>         state[offset + j] = tmp[j];
506a503
>     }
509c506
<       BaseState::gather_state(state);
---
>     BaseState::gather_state(state);
511,512c508
<       return state;
<     }
---
>     return state;
523,529c519,520
<     size_t size_required = 2*(sizeof(std::complex<double>) << BaseState::num_qubits_) + (sizeof(std::complex<double>) << BaseState::chunk_bits_)*BaseState::num_local_chunks_;
<     if((size_required >> 20) > Utils::get_system_memory_mb()){
<       throw std::runtime_error(std::string("There is not enough memory to store states"));
<     }
<     else{
<       int_t iChunk;
<       auto state = BaseState::qregs_[0].copy_to_vector();
---
>     int_t iChunk;
>     auto state = BaseState::qregs_[0].copy_to_vector();
531c522,523
<       state.resize(BaseState::num_local_chunks_ << BaseState::chunk_bits_);
---
>     //TO DO check memory availability
>     state.resize(BaseState::num_local_chunks_ << BaseState::chunk_bits_);
534,539c526,530
<       for(iChunk=1;iChunk<BaseState::num_local_chunks_;iChunk++){
<         auto tmp = BaseState::qregs_[iChunk].copy_to_vector();
<         uint_t j,offset = iChunk << BaseState::chunk_bits_;
<         for(j=0;j<tmp.size();j++){
<           state[offset + j] = tmp[j];
<         }
---
>     for(iChunk=1;iChunk<BaseState::num_local_chunks_;iChunk++){
>       auto tmp = BaseState::qregs_[iChunk].copy_to_vector();
>       uint_t j,offset = iChunk << BaseState::chunk_bits_;
>       for(j=0;j<tmp.size();j++){
>         state[offset + j] = tmp[j];
540a532
>     }
543c535
<       BaseState::gather_state(state);
---
>     BaseState::gather_state(state);
545,546c537
<       return state;
<     }
---
>     return state;
