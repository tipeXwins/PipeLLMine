33,36c33,36
<     virtual bool available(size_t op_start_cycle, ql::gate * ins, std::string & operation_name,
<         std::string & operation_type, std::string & instruction_type, size_t operation_duration)=0;
<     virtual void reserve(size_t op_start_cycle, ql::gate * ins, std::string & operation_name,
<         std::string & operation_type, std::string & instruction_type, size_t operation_duration)=0;
---
>     virtual bool available(size_t cycle, ql::gate * ins, std::string & operation_name,
>         std::string & operation_type, std::string & instruction_type, size_t operation_cycles)=0;
>     virtual void reserve(size_t cycle, ql::gate * ins, std::string & operation_name,
>         std::string & operation_type, std::string & instruction_type, size_t operation_cycles)=0;
43c43
<     std::vector<size_t> state; // is busy till cycle
---
>     std::vector<size_t> state; // is busy till cycle number contained in state
50c50
<             state[i] = 0;
---
>             state[i] = MAX_CYCLE;
54,55c54,55
<     bool available(size_t op_start_cycle, ql::gate * ins, std::string & operation_name,
<         std::string & operation_type, std::string & instruction_type, size_t operation_duration)
---
>     bool available(size_t cycle, ql::gate * ins, std::string & operation_name,
>         std::string & operation_type, std::string & instruction_type, size_t operation_cycles)
59c59
<             DOUT(" available? curr op_start_cycle: " << op_start_cycle << "  qubit: " << q 
---
>             DOUT(" available? curr cycle: " << cycle << "  qubit: " << q 
61c61
<             if( op_start_cycle < state[q] )
---
>             if( cycle >= state[q] )
71,72c71,72
<     void reserve(size_t op_start_cycle, ql::gate * ins, std::string & operation_name,
<         std::string & operation_type, std::string & instruction_type, size_t operation_duration)
---
>     void reserve(size_t cycle, ql::gate * ins, std::string & operation_name,
>         std::string & operation_type, std::string & instruction_type, size_t operation_cycles)
76,77c76,77
<             state[q]  = op_start_cycle + operation_duration;
<             DOUT("reserved. curr op_start_cycle: " << op_start_cycle << " qubit: " << q 
---
>             state[q] = cycle;
>             DOUT("reserved. curr cycle: " << cycle << " qubit: " << q 
88c88
<     std::vector<size_t> state; // is busy till cycle
---
>     std::vector<size_t> state; // is busy till cycle number contained in state
100c100
<             state[i] = 0;
---
>             state[i] = MAX_CYCLE;
114,115c114,115
<     bool available(size_t op_start_cycle, ql::gate * ins, std::string & operation_name,
<         std::string & operation_type, std::string & instruction_type, size_t operation_duration)
---
>     bool available(size_t cycle, ql::gate * ins, std::string & operation_name,
>         std::string & operation_type, std::string & instruction_type, size_t operation_cycles)
122,123c122,123
<                 DOUT(" available? curr op_start_cycle: " << op_start_cycle << "  qwg: " << qubit2qwg[q] 
<                        << " is busy till op_start_cycle : " << state[ qubit2qwg[q] ] 
---
>                 DOUT(" available? curr cycle: " << cycle << "  qwg: " << qubit2qwg[q] 
>                        << " is busy till cycle : " << state[ qubit2qwg[q] ] 
125c125
<                 if( op_start_cycle < state[ qubit2qwg[q] ] )
---
>                 if( cycle >= state[ qubit2qwg[q] ] )
139,140c139,140
<     void reserve(size_t op_start_cycle, ql::gate * ins, std::string & operation_name,
<         std::string & operation_type, std::string & instruction_type, size_t operation_duration)
---
>     void reserve(size_t cycle, ql::gate * ins, std::string & operation_name,
>         std::string & operation_type, std::string & instruction_type, size_t operation_cycles)
147,148c147
<                 if( state[ qubit2qwg[q] ] < op_start_cycle + operation_duration)
<                     state[ qubit2qwg[q] ]  = op_start_cycle + operation_duration;
---
>                 state[ qubit2qwg[q] ]  = cycle - (operation_cycles - 1);
150c149
<                 DOUT("reserved. curr op_start_cycle: " << op_start_cycle << " qwg: " << qubit2qwg[q] 
---
>                 DOUT("reserved. curr cycle: " << cycle << " qwg: " << qubit2qwg[q] 
163c162
<     std::vector<size_t> state; // is busy till cycle
---
>     std::vector<size_t> state; // is busy till cycle number contained in state
174,175c173,174
<             start_cycle[i] = 0;
<             state[i] = 0;
---
>             start_cycle[i] = MAX_CYCLE;            
>             state[i] = MAX_CYCLE;
188,189c187,188
<     bool available(size_t op_start_cycle, ql::gate * ins, std::string & operation_name,
<         std::string & operation_type, std::string & instruction_type, size_t operation_duration)
---
>     bool available(size_t cycle, ql::gate * ins, std::string & operation_name,
>         std::string & operation_type, std::string & instruction_type, size_t operation_cycles)
196c195
<                 DOUT(" available? curr op_start_cycle: " << op_start_cycle << "  meas: " << qubit2meas[q] 
---
>                 DOUT(" available? curr cycle: " << cycle << "  meas: " << qubit2meas[q] 
198c197
<                 if( op_start_cycle != start_cycle[ qubit2meas[q] ] )
---
>                 if( cycle != start_cycle[ qubit2meas[q] ] )
202c201
<                     if( op_start_cycle < state[ qubit2meas[q] ] )
---
>                     if( cycle >= state[ qubit2meas[q] ] )
214,215c213,214
<     void reserve(size_t op_start_cycle, ql::gate * ins, std::string & operation_name,
<         std::string & operation_type, std::string & instruction_type, size_t operation_duration)
---
>     void reserve(size_t cycle, ql::gate * ins, std::string & operation_name,
>         std::string & operation_type, std::string & instruction_type, size_t operation_cycles)
222,224c221,223
<                 start_cycle[ qubit2meas[q] ] = op_start_cycle;
<                 state[ qubit2meas[q] ] = op_start_cycle + operation_duration;
<                 DOUT("reserved. curr op_start_cycle: " << op_start_cycle << " meas: " << qubit2meas[q] 
---
>                 start_cycle[ qubit2meas[q] ] = cycle;
>                 state[ qubit2meas[q] ] = cycle - (operation_cycles - 1);
>                 DOUT("reserved. curr cycle: " << cycle << " meas: " << qubit2meas[q] 
235c234
<     std::vector<size_t> state; // is busy till cycle
---
>     std::vector<size_t> state; // is busy till cycle number contained in state
247c246
<             state[i] = 0;
---
>             state[i] = MAX_CYCLE;
280,281c279,280
<     bool available(size_t op_start_cycle, ql::gate * ins, std::string & operation_name,
<         std::string & operation_type, std::string & instruction_type, size_t operation_duration)
---
>     bool available(size_t cycle, ql::gate * ins, std::string & operation_name,
>         std::string & operation_type, std::string & instruction_type, size_t operation_cycles)
295c294
<                 DOUT(" available? curr op_start_cycle: " << op_start_cycle << ", edge: " << edge_no
---
>                 DOUT(" available? curr cycle: " << cycle << ", edge: " << edge_no
302c301
<                     if( op_start_cycle < state[e] )
---
>                     if( cycle >= state[e] )
319,320c318,319
<     void reserve(size_t op_start_cycle, ql::gate * ins, std::string & operation_name,
<         std::string & operation_type, std::string & instruction_type, size_t operation_duration)
---
>     void reserve(size_t cycle, ql::gate * ins, std::string & operation_name,
>         std::string & operation_type, std::string & instruction_type, size_t operation_cycles)
330c329
<             state[edge_no] = op_start_cycle + operation_duration;
---
>             state[edge_no] = cycle - (operation_cycles - 1);
333c332
<                 state[e] = op_start_cycle + operation_duration;
---
>                 state[e] = cycle - (operation_cycles - 1);
336c335
<             DOUT("reserved. curr op_start_cycle: " << op_start_cycle << " edge: " << edge_no 
---
>             DOUT("reserved. curr cycle: " << cycle << " edge: " << edge_no 
387,388c386,387
<     bool available(size_t op_start_cycle, ql::gate * ins, std::string & operation_name,
<         std::string & operation_type, std::string & instruction_type, size_t operation_duration)
---
>     bool available(size_t cycle, ql::gate * ins, std::string & operation_name,
>         std::string & operation_type, std::string & instruction_type, size_t operation_cycles)
393c392
<             if( rptr->available(op_start_cycle, ins, operation_name, operation_type, instruction_type, operation_duration) == false)
---
>             if( rptr->available(cycle, ins, operation_name, operation_type, instruction_type, operation_cycles) == false)
398,399c397,398
<     void reserve(size_t op_start_cycle, ql::gate * ins, std::string & operation_name,
<         std::string & operation_type, std::string & instruction_type, size_t operation_duration)
---
>     void reserve(size_t cycle, ql::gate * ins, std::string & operation_name,
>         std::string & operation_type, std::string & instruction_type, size_t operation_cycles)
404c403
<             rptr->reserve(op_start_cycle, ins, operation_name, operation_type, instruction_type, operation_duration);
---
>             rptr->reserve(cycle, ins, operation_name, operation_type, instruction_type, operation_cycles);
