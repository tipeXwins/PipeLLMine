--- qiskit-aer/qiskit-aer#158/after/CMakeLists.txt	2022-01-10 16:02:54.000000000 +0000
+++ qiskit-aer/qiskit-aer#158/before/CMakeLists.txt	2022-01-10 16:02:54.000000000 +0000
@@ -10,16 +10,6 @@
 # shared library.
 string(REPLACE " -static " "" CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
 
-if(APPLE)
-    message(STATUS "On Mac, we force linking with undefined symbols for Python library, they will be
-                    solved at runtime by the loader")
-    if(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
-        set(AER_LINKER_FLAGS "-undefined dynamic_lookup")
-    else()
-        set(AER_LINKER_FLAGS "-undefined dynamic_lookup -flat_namespace")
-    endif()
-    unset(PYTHON_LIBRARIES)
-endif()
 # QASM Controller
 
 add_cython_target(qasm_controller_wrapper qasm_controller_wrapper.pyx CXX)
@@ -35,7 +25,12 @@
     PRIVATE ${AER_SIMULATOR_CPP_EXTERNAL_LIBS}
     PRIVATE ${PYTHON_INCLUDE_DIRS})
 
-set_target_properties(qasm_controller_wrapper PROPERTIES LINK_FLAGS ${AER_LINKER_FLAGS})
+if(APPLE)
+    message(STATUS "On Mac, we force linking with undefined symbols for Python library, they will be
+        solved at runtime by the loader")
+    set_target_properties(qasm_controller_wrapper PROPERTIES LINK_FLAGS "-undefined dynamic_lookup -flat_namespace")
+    unset(PYTHON_LIBRARIES)
+endif()
 
 target_link_libraries(qasm_controller_wrapper
     ${AER_LIBRARIES}
@@ -61,7 +56,12 @@
     PRIVATE ${AER_SIMULATOR_CPP_EXTERNAL_LIBS}
     PRIVATE ${PYTHON_INCLUDE_DIRS})
 
-set_target_properties(statevector_controller_wrapper PROPERTIES LINK_FLAGS ${AER_LINKER_FLAGS})
+if(APPLE)
+    message(STATUS "On Mac, we force linking with undefined symbols for Python library, they will be
+        solved at runtime by the loader")
+    set_target_properties(statevector_controller_wrapper PROPERTIES LINK_FLAGS "-undefined dynamic_lookup -flat_namespace")
+    unset(PYTHON_LIBRARIES)
+endif()
 
 target_link_libraries(statevector_controller_wrapper
     ${AER_LIBRARIES}
@@ -87,7 +87,12 @@
     PRIVATE ${AER_SIMULATOR_CPP_EXTERNAL_LIBS}
     PRIVATE ${PYTHON_INCLUDE_DIRS})
 
-set_target_properties(unitary_controller_wrapper PROPERTIES LINK_FLAGS ${AER_LINKER_FLAGS})
+if(APPLE)
+    message(STATUS "On Mac, we force linking with undefined symbols for Python library, they will be
+        solved at runtime by the loader")
+    set_target_properties(unitary_controller_wrapper PROPERTIES LINK_FLAGS "-undefined dynamic_lookup -flat_namespace")
+    unset(PYTHON_LIBRARIES)
+endif()
 
 target_link_libraries(unitary_controller_wrapper
     ${AER_LIBRARIES}
