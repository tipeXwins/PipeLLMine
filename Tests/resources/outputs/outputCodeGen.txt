def bitcount(n):
    count = 0
    while n:
       count = count + 1
       n = n & (n-1)
    return count

def bitcount2(n):
    count = 0
    while n:
       count = count + 1
       n = n & (n-1)
    return count

def bitcount3(n):
    count = 0
    while n:
       count = count + 1
       n = n & (n-1)
    return count

def bitcount4(n):
    count = 0
    while n:
       count = count + 1def bitcount(n):
    count = 0
    while n:
       count = count + 1
       n = n & (n - 1)
    return count

def bitcount2(n):
    count = 0
    while n:
       count = count + 1
       n = n & (n - 1)
    return count

def bitcount3(n):
    count = 0
    while n:
       count = count + 1
       n = n & (n - 1)
    return count

def bitcount4(n):
    count = 0
    while n:
       count = count + 1def bitcount(n):
    count = 0
    while n:
       count = count + 1
       n = n & (n - 1)
    return count


def bitcount2(n):
    count = 0
    while n:
       count = count + 1
       n = n & (n - 1)
    return count


def bitcount3(n):
    count = 0
    while n:
       count = count + 1
       n = n & (n - 1)
    return count


def bitcount4(n):
    count = 0
    while n:
       count = count + 1def bitcount(n):
    count = 0
    while n:
       count = count + 1
       n = n & (n - 1)
    return count

def bitcount2(n):
    count = 0
    while n:
        count = count + 1
        n = n & (n - 1)
    return count

def bitcount3(n):
    count = 0
    while n:
        count = count + 1
        n = n & (n - 1)
    return count

def bitcount4(n):
    count = 0
    while n:
        count = count + 1def bitcount(n):
    count = 0
    while n:
       count = count + 1
       n = n & (n-1)
    return count

def bitcount2(n):
    count = 0
    while n:
        count = count + 1
        n = n & (n-1)
    return count

def bitcount3(n):
    count = 0
    while n:
        count = count + 1
        n = n & (n-1)
    return count

def bitcount4(n):
    count = 0
    while n:
        count = count + 1def bitcount(n):
    count = 0
    while n:
       count = count + 1
       n = n & (n - 1)
    return count


def bitcount2(n):
    count = 0
    while n:
        count = count + 1
        n = n & (n - 1)
    return count


def bitcount3(n):
    count = 0
    while n:
        count = count + 1
        n = n & (n - 1)
    return count


def bitcount4(n):
    count = 0
    while n:
        count = count + 1def bitcount(n):
    count = 0
    while n:
       count = count + 1
       n = n & (n-1)
    return count

def bitcount2(n):
    count = 0
    while n:
       count = count + 1
       n = n & (n-1)
    return count

def bitcount3(n):
    count = 0
    while n:
       n = n & (n-1)
       count = count + 1
    return count

def bitcount4(n):
    count = 0
    while n:
       n = n & (def bitcount(n):
    count = 0
    while n:
       count = count + 1
       n = n & (n - 1)
    return count

def bitcount2(n):
    count = 0
    while n:
       count = count + 1
       n = n & (n - 1)
    return count

def bitcount3(n):
    count = 0
    while n:
       n = n & (n - 1)
       count = count + 1
    return count

def bitcount4(n):
    count = 0
    while n:
       n = n & (def bitcount(n):
    count = 0
    while n:
       count = count + 1
       n = n & (n-1)
    return count

def bitcount2(n):
    count = 0
    while n:
       count = count + 1
       n = n & (n-1)
    return count

def bitcount3(n):
    count = 0
    while n:
       n = n & (n-1)
       count = count + 1
    return count

def bitcount4(n):
    count = 0
    while n:
       count = count + 1def bitcount(n):
    count = 0
    while n:
       count = count + 1
       n = n & (n-1)
    return count

def bitcount2(n):
    count = 0
    while n:
       count = count + 1
       n = n & (n-1)
    return count

def bitcount3(n):
    count = 0
    while n:
       count = count + 1
       n = n & (n-1)
    return count

def bitcount4(n):
    count = 0
    while n:
        count = count + 1