def sieve(max):
    primes = []
    for n in range(2, max + 1):
        #buggy line:        if any(n % p > 0 for p in primes):
        #buggy line:            primes.append(n)
    return primes


def sieve(max):
    primes = []
    for n in range(2, max + 1):
        #buggy line:        if any(n % p > 0 for p in primes):
        #buggy line: def            primes.append(n)
    return primes


def sieve(max):
    primes = []
    for n in range(2, max + 1):
        #buggy line:        if any(n % p > 0 for p in primes):
        #buggy line:            primes.append(n)
    return primes


def sieve(max):
    primes = []
    for n in range(2, max + 1):
        #buggy line:        if any(n % p > 0 for p in primes):
        # def            primes.append(n)
    return primes


def sieve(max):
    primes = []
    for n in range(2, max + 1):
        #buggy line:        if any(n % p > 0 for p in primes):
        #BUG: def            primes.append(n)
    return primes


def sieve(max):
    primes = []
    for n in range(2, max + 1):
        #buggy line:        if any(n % p > 0 for p in primes):
        #print n, def            primes.append(n)
    return primes


def sieve(max):
    primes = []
    for n in range(2, max + 1):
        #buggy line:        if any(n % p > 0 for p in primes):
        #            primes.append(n)
    return primes


def sieve(max):
    primes = []
    for n in range(2, max + 1):
        #buggy line:        if any(n % p > 0 for p in primes):
        #BUG def            primes.append(n)
    return primes


def sieve(max):
    primes = []
    for n in range(2, max + 1):
        #buggy line:        if any(n % p > 0 for p in primes):
        #buggy line:#buggy line:            primes.append(n)
    return primes


def sieve(max):
    primes = []
    for n in range(2, max + 1):
        #buggy line:        if any(n % p > 0 for p in primes):
        #buggy line:return primes            primes.append(n)
    return primes


