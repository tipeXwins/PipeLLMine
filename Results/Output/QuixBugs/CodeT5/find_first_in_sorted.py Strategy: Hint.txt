def find_first_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    #buggy line:    while lo <= hi:
    mid

 def find_first_in_sorted(arr, x):#buggy line:#buggy line:return -1


#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:        mid = (lo + hi) // 2

        if x == arr[mid] and (mid == 0 or x != arr[mid - 1]):
            return mid

        elif x <= arr[mid]:
            hi = mid

        else:
            lo = mid + 1

    return -1


def find_first_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    #buggy line:    while lo <= hi:
    mid

 def find_first_in_sorted(arr, x):#buggy line:#buggy line: #buggy line:return -1


#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:        mid = (lo + hi) // 2

        if x == arr[mid] and (mid == 0 or x != arr[mid - 1]):
            return mid

        elif x <= arr[mid]:
            hi = mid

        else:
            lo = mid + 1

    return -1


def find_first_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    #buggy line:    while lo <= hi:
    mid

 def find_first_in_sorted(arr, x):#buggy line:#buggy line:#buggy line:return -1


#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:        mid = (lo + hi) // 2

        if x == arr[mid] and (mid == 0 or x != arr[mid - 1]):
            return mid

        elif x <= arr[mid]:
            hi = mid

        else:
            lo = mid + 1

    return -1


def find_first_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    #buggy line:    while lo <= hi:
    mid

 def find_first_in_sorted(arr, x):#buggy line:#buggy line:return -1


#buggy line:#buggy line:#buggy line:#buggy line:return -1


#buggy line:#buggy line:#buggy line:#buggy line:#buggy line        mid = (lo + hi) // 2

        if x == arr[mid] and (mid == 0 or x != arr[mid - 1]):
            return mid

        elif x <= arr[mid]:
            hi = mid

        else:
            lo = mid + 1

    return -1


def find_first_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    #buggy line:    while lo <= hi:
    mid

 def find_first_in_sorted(arr, x):#buggy line:#buggy line: #buggy line:return -1


#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:#buggy line: #buggy line:#buggy line:#buggy line:#        mid = (lo + hi) // 2

        if x == arr[mid] and (mid == 0 or x != arr[mid - 1]):
            return mid

        elif x <= arr[mid]:
            hi = mid

        else:
            lo = mid + 1

    return -1


def find_first_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    #buggy line:    while lo <= hi:
    mid

 def find_first_in_sorted(arr, x):#buggy line:#buggy line: #buggy line:return -1


#buggy line:#buggy line:#buggy line: #buggy line:#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:#        mid = (lo + hi) // 2

        if x == arr[mid] and (mid == 0 or x != arr[mid - 1]):
            return mid

        elif x <= arr[mid]:
            hi = mid

        else:
            lo = mid + 1

    return -1


def find_first_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    #buggy line:    while lo <= hi:
    mid

 def find_first_in_sorted(arr, x):#buggy line:#buggy line: #buggy line:return -1


#buggy line:#buggy line:#buggy line: #buggy line:#buggy line:#buggy line:#buggy line: #buggy line:#buggy line: #buggy        mid = (lo + hi) // 2

        if x == arr[mid] and (mid == 0 or x != arr[mid - 1]):
            return mid

        elif x <= arr[mid]:
            hi = mid

        else:
            lo = mid + 1

    return -1


def find_first_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    #buggy line:    while lo <= hi:
    mid

 def find_first_in_sorted(arr, x):#buggy line:#buggy line: #buggy line:return -1


#buggy line:#buggy line:#buggy line: #buggy line:#buggy line: #buggy line:#buggy line: #buggy line:#buggy line:#buggy        mid = (lo + hi) // 2

        if x == arr[mid] and (mid == 0 or x != arr[mid - 1]):
            return mid

        elif x <= arr[mid]:
            hi = mid

        else:
            lo = mid + 1

    return -1


def find_first_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    #buggy line:    while lo <= hi:
    mid

 def find_first_in_sorted(arr, x):#buggy line:#buggy line: #buggy line:return -1


#buggy line:#buggy line:#buggy line: #buggy line:#buggy line:#buggy line:#buggy line: #buggy line:#buggy line:#bug        mid = (lo + hi) // 2

        if x == arr[mid] and (mid == 0 or x != arr[mid - 1]):
            return mid

        elif x <= arr[mid]:
            hi = mid

        else:
            lo = mid + 1

    return -1


def find_first_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    #buggy line:    while lo <= hi:
    mid

 def find_first_in_sorted(arr, x):#buggy line:#buggy line: #buggy line:return -1


#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:#buggy line:           mid = (lo + hi) // 2

        if x == arr[mid] and (mid == 0 or x != arr[mid - 1]):
            return mid

        elif x <= arr[mid]:
            hi = mid

        else:
            lo = mid + 1

    return -1


