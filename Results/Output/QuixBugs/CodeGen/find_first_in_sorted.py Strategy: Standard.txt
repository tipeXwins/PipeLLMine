def find_first_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    while lo < hi:
        mid = lo + (hi - lo) // 2
        if arr[mid] < x:
            lo = mid + 1
        else:
            hi = mid

    return lo


def find_last_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    while lo < hi:
        mid = lo + (hi - lo) // 2
        if arr[mid] <= x:
            lo = mid + 1
        else:
            hi = mid

    return lodef find_first_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    while lo < hi:
        mid = lo + (hi - lo) // 2
        if arr[mid] < x:
            lo = mid + 1
        else:
            hi = mid
    return lo


def find_last_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    while lo < hi:
        mid = lo + (hi - lo) // 2
        if arr[mid] <= x:
            lo = mid + 1
        else:
            hi = mid
    return lodef find_first_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    while lo < hi:
        mid = (lo + hi) // 2
        if arr[mid] < x:
            lo = mid + 1
        else:
            hi = mid

    return lo


def find_last_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    while lo < hi:
        mid = (lo + hi) // 2
        if arr[mid] <= x:
            lo = mid + 1
        else:
            hi = mid

    return lo - 1


def find_first_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    while lo < hi:
        mid = lo + (hi - lo) // 2
        if arr[mid] < x:
            lo = mid + 1
        else:
            hi = mid
    return lo


def find_last_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    while lo < hi:
        mid = lo + (hi - lo) // 2
        if arr[mid] > x:
            hi = mid
        else:
            lo = mid + 1
    return lodef find_first_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    while lo < hi:
        mid = lo + (hi - lo) // 2
        if arr[mid] < x:
            lo = mid + 1
        else:
            hi = mid

    return lo


def find_last_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    while lo < hi:
        mid = lo + (hi - lo) // 2
        if arr[mid] > x:
            hi = mid
        else:
            lo = mid + 1

    return lodef find_first_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    while lo < hi:
        mid = lo + (hi - lo) // 2
        if arr[mid] < x:
            lo = mid + 1
        else:
            hi = mid

    return lo


def find_last_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    while lo < hi:
        mid = lo + (hi - lo) // 2
        if arr[mid] < x:
            lo = mid + 1
        else:
            hi = mid

    return lodef find_first_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    while lo < hi:
        mid = lo + (hi - lo) // 2
        if arr[mid] == x:
            return mid
        elif arr[mid] > x:
            hi = mid
        else:
            lo = mid + 1
    return -1


def find_last_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    while lo < hi:
        mid = lo + (hi - lo) // 2
        if arr[mid] == x:
            return middef find_first_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    while lo < hi:
        mid = lo + (hi - lo) // 2
        if arr[mid] == x:
            return mid
        elif arr[mid] < x:
            lo = mid + 1
        else:
            hi = mid
    return -1


def find_last_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    while lo < hi:
        mid = lo + (hi - lo) // 2
        if arr[mid] == x:
            return middef find_first_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    while lo < hi:
        mid = lo + (hi - lo) // 2
        if arr[mid] < x:
            lo = mid + 1
        else:
            hi = mid
    return lo


def find_last_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    while lo < hi:
        mid = lo + (hi - lo) // 2
        if arr[mid] < x:
            lo = mid + 1
        else:
            hi = mid
    return lodef find_first_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    while lo < hi:
        mid = lo + (hi - lo) // 2
        if arr[mid] < x:
            lo = mid + 1
        else:
            hi = mid
    return lo


def find_last_in_sorted(arr, x):
    lo = 0
    hi = len(arr)

    while lo < hi:
        mid = lo + (hi - lo) // 2
        if arr[mid] < x:
            lo = mid + 1
        else:
            hi = mid
    return hi