
def is_valid_parenthesization(parens):
    depth = 0
    for paren in parens:
        if paren == '(':
            depth += 1
        else:
            depth -= 1
            if depth < 0:
                return False

    return True


if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    parens_string = input()

    if is_valid_parenthesization(parens_string):
        fptr.write("YES\n")
    else:
        fptr.write("NO\n")

    fptr.close()

def is_valid_parenthesization(parens):
    depth = 0
    for paren in parens:
        if paren == '(':
            depth += 1
        else:
            depth -= 1
            if depth < 0:
                return False

    return True


if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    parens = input()

    result = is_valid_parenthesization(parens)

    fptr.write(str(result) + '\n')

    fptr.close()

def is_valid_parenthesization(parens):
    depth = 0
    for paren in parens:
        if paren == '(':
            depth += 1
        else:
            depth -= 1
            if depth < 0:
                return False

    return True


if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    parens = input()

    result = is_valid_parenthesization(parens)

    fptr.write(str(int(result)) + '\n')

    fptr.close()

def is_valid_parenthesization(parens):
    depth = 0
    for paren in parens:
        if paren == '(':
            depth += 1
        else:
            depth -= 1
            if depth < 0:
                return False

    return True


if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    parens_string = input()

    result = is_valid_parenthesization(parens_string)

    fptr.write(str(int(result)) + '\n')

    fptr.close()

def is_valid_parenthesization(parens):
    depth = 0
    for paren in parens:
        if paren == '(':
            depth += 1
        else:
            depth -= 1
            if depth < 0:
                return False

    return True


if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    parens_string = input()

    result = is_valid_parenthesization(parens_string)

    fptr.write(str(result) + '\n')

    fptr.close()

def is_valid_parenthesization(parens):
    depth = 0
    for paren in parens:
        if paren == '(':
            depth += 1
        else:
            depth -= 1
            if depth < 0:
                return False

    return True


if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    parens_string = input()

    if is_valid_parenthesization(parens_string):
        fptr.write("YES")
    else:
        fptr.write("NO")

    fptr.close()

def is_valid_parenthesization(parens):
    depth = 0
    for paren in parens:
        if paren == '(':
            depth += 1
        else:
            depth -= 1
            if depth < 0:
                return False

    return True


if __name__ == '__main__':
    parens = input()
    if is_valid_parenthesization(parens):
        print('YES')
    else:
        print('NO')

def is_valid_parenthesization(parens):
    depth = 0
    for paren in parens:
        if paren == '(':
            depth += 1
        else:
            depth -= 1
            if depth < 0:
                return False

    return True


if __name__ == '__main__':
    parens = input()
    if is_valid_parenthesization(parens):
        print("YES")
    else:
        print("NO")

def is_valid_parenthesization(parens):
    depth = 0
    for paren in parens:
        if paren == '(':
            depth += 1
        else:
            depth -= 1
            if depth < 0:
                return False

    return True


if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    parens_string = input()

    if is_valid_parenthesization(parens_string):
        fptr.write("YES\n")
    else:
        fptr.write("NO\n")

    fptr.close()
def is_valid_parenthesization(parens):
    depth = 0
    for paren in parens:
        if paren == '(':
            depth += 1
        else:
            depth -= 1
            if depth < 0:
                return False

    return True


if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    parens_string = input()

    if is_valid_parenthesization(parens_string):
        fptr.write("YES\n")
    else:
        fptr.write("NO\n")

    fptr.close()

