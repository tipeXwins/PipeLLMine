def kheapsort(arr, k):
    import heapq

    heap = arr[:k]
    heapq.heapify(heap)

    for x in arr:
        yield heapq.heappushpop(heap, x)

    while heap:
        yield heapq.heappop(heap)



def kheapsort(arr, k):
    import heapq

    heap = arr[:k]
    heapq.heapify(heap)

    for x in arr:
        yield heapq.heappushpop(heap, x)

    while heap:
        yield heapq.heappop(heap)




def kheapsort(arr, k):
    import heapq

    heap = arr[:k]
    heapq.heapify(heap)

    for x in arr:
        yield heapq.heappushpop(heap, x)

    while heap:
        yield heapq.heappop(heap)




if __name__ == '__main__':
    arr = list(map(int, input().split()))

    k = int(input())

    result = kheapsort(arr, k)

    for x in result:
        print(x, end=' ')
def kheapsort(arr, k):
    import heapq

    heap = arr[:k]
    heapq.heapify(heap)

    for x in arr:
        yield heapq.heappushpop(heap, x)

    while heap:
        yield heapq.heappop(heap)




if __name__ == '__main__':
    arr = list(map(int, input().split()))
    k = int(input())
    print(*kheapsort(arr, k))
def kheapsort(arr, k):
    import heapq

    heap = arr[:k]
    heapq.heapify(heap)

    for x in arr:
        yield heapq.heappushpop(heap, x)

    while heap:
        yield heapq.heappop(heap)




if __name__ == '__main__':
    arr = list(map(int, input().split()))
    k = int(input())
    print(*kheapsort(arr, k))def kheapsort(arr, k):
    import heapq

    heap = arr[:k]
    heapq.heapify(heap)

    for x in arr:
        yield heapq.heappushpop(heap, x)

    while heap:
        yield heapq.heappop(heap)




if __name__ == '__main__':
    arr = list(map(int, input().split()))

    k = int(input())

    result = kheapsort(arr, k)

    for i in result:
        print(i, end=' ')
def kheapsort(arr, k):
    import heapq

    heap = arr[:k]
    heapq.heapify(heap)

    for x in arr:
        yield heapq.heappushpop(heap, x)

    while heap:
        yield heapq.heappop(heap)




if __name__ == '__main__':
    arr = list(map(int, input().split()))

    k = int(input())

    result = kheapsort(arr, k)

    for x in result:
        print(x, end=' ')def kheapsort(arr, k):
    import heapq

    heap = arr[:k]
    heapq.heapify(heap)

    for x in arr:
        yield heapq.heappushpop(heap, x)

    while heap:
        yield heapq.heappop(heap)




if __name__ == '__main__':
    n = int(input())
    arr = list(map(int, input().split()))
    k = int(input())
    print(*kheapsort(arr, k))
def kheapsort(arr, k):
    import heapq

    heap = arr[:k]
    heapq.heapify(heap)

    for x in arr:
        yield heapq.heappushpop(heap, x)

    while heap:
        yield heapq.heappop(heap)




if __name__ == '__main__':
    n = int(input())
    arr = list(map(int, input().split()))
    k = int(input())
    print(*kheapsort(arr, k))def kheapsort(arr, k):
    import heapq

    heap = arr[:k]
    heapq.heapify(heap)

    for x in arr:
        yield heapq.heappushpop(heap, x)

    while heap:
        yield heapq.heappop(heap)




if __name__ == "__main__":
    arr = list(map(int, input().split()))
    k = int(input())
    print(*kheapsort(arr, k))
