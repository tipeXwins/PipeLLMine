def find_first_in_sorted(arr, x): lo = 0 hi = len(arr) #buggy line: while lo <= hi: mid = (lo + hi) // 2 if x == arr[mid] and (mid == 0 or x!= arr[mid - 1]): return mid elif x <= arr[mid]: hi = mid else: lo = mid + 1 return -1def find_first_in_sorted(arr, x): lo = 0 hi = len(arr) #buggy line: while lo <= hi: #buggy line: mid = (lo + hi) // 2 if x == arr[mid] and (mid == 0 or x!= arr[mid - 1]): return mid elif x <= arr[mid]: hi = mid else: lo = mid + 1 return -1def find_first_in_sorted(arr, x): lo = 0 hi = len(arr) #buggy line: while lo <= hi: mid = (lo + hi - 1) // 2 if x == arr[mid] and (mid == 0 or x!= arr[mid - 1]): return mid elif x <= arr[mid]: hi = mid else: lo = mid + 1 return -1def find_first_in_sorted(arr, x): lo = 0 hi = len(arr) #buggy line: while lo <= hi: mid = (lo + hi) // 2 if x == arr[mid]: return mid elif x == arr[mid] and (mid == 0 or x!= arr[mid - 1]): return mid elif x <= arr[mid]: hi = mid else: lo = mid + 1 return -1def find_first_in_sorted(arr, x): lo = 0 hi = len(arr) #buggy line: while lo <= hi: mid = (lo + lo) // 2 if x == arr[mid] and (mid == 0 or x!= arr[mid - 1]): return mid elif x <= arr[mid]: hi = mid else: lo = mid + 1 return -1def find_first_in_sorted(arr, x): lo = 0 hi = len(arr) #buggy line: while lo <= hi: mid = (lo + lo) // 2 if x == arr[mid]: return mid elif x == arr[mid] and (mid == 0 or x!= arr[mid - 1]): return mid elif x <= arr[mid]: hi = mid else: lo = mid + 1 return -1def find_first_in_sorted(arr, x): lo = 0 hi = len(arr) #buggy line: while lo <= hi: #buggy line: mid = (lo + hi) // 2 if x == arr[mid] and (mid == 0 or x!= arr[mid - 1]): return mid elif x <= arr[mid]: hi = mid else: lo = mid + 1 return -1;def find_first_in_sorted(arr, x): lo = 0 hi = len(arr) #buggy line: while lo <= hi: mid = (lo + hi) // 2 if x == arr[mid] and (mid == 0 or x!= arr[mid - 1]): return mid elif x <= arr[mid]: hi = mid else: lo = mid + 1 return -1 return -1def find_first_in_sorted(arr, x): lo = 0 hi = len(arr) #buggy line: while lo <= hi: #buggy line: mid = (lo + hi) // 2 if x == arr[mid] and (mid == 0 or x!= arr[mid - 1]): return mid elif x <= arr[mid]: hi = mid else: lo = mid + 1 return -1.def find_first_in_sorted(arr, x): lo = 0 hi = len(arr) #buggy line: while lo <= hi: #buggy line: mid = (lo + hi) // 2 if x == arr[mid] and (mid == 0 or x!= arr[mid - 1]): return mid elif x <= arr[mid]: hi = mid else: lo = mid + 1 return -1 return -1