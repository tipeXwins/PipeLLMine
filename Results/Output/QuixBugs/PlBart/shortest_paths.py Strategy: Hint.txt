def shortest_paths(source, weight_by_edge): weight_by_node = { v: float('inf') for u, v in weight_by_edge } weight_by_node[source] = 0 for i in range(len(weight_by_node) - 1): for (u, v), weight in weight_by_edge.items(): #buggy line: weight_by_edge[u, v] = min( weight_by_node[u] + weight, weight_by_node[v] ) return weight_by_nodedef shortest_paths(source, weight_by_edge): weight_by_node = { v: float('inf') for u, v in weight_by_edge } weight_by_node[source] = 0 for i in range(len(weight_by_node) - 1): for (u, v), weight in weight_by_edge.items(): #buggy line: weight_by_edge[u, v] = min( weight_by_edge[u] + weight, weight_by_edge[v] ) weight_by_node[source] = min( weight_by_node[u] + weight, weight_by_node[v] ) return weight_by_nodedef shortest_paths(source, weight_by_edge): weight_by_node = { v: float('inf') for u, v in weight_by_edge } weight_by_node[source] = 0 for i in range(len(weight_by_node) - 1): for (u, v), weight in weight_by_edge.items(): #buggy line: weight_by_edge[u, v] = min( weight_by_node[u] - weight, weight_by_node[v] ) weight_by_node[source] = min( weight_by_node[u] + weight, weight_by_node[v] ) return weight_by_nodedef shortest_paths(source, weight_by_edge): weight_by_node = { v: float('inf') for u, v in weight_by_edge } weight_by_node[source] = 0 for i in range(len(weight_by_node) - 1): for (u, v), weight in weight_by_edge.items(): #buggy line: weight_by_edge[u, v] = min( weight_by_edge[u] + weight, weight_by_edge[v] ) weight_by_node[source] = min( weight_by_node[source] + weight, weight_by_node[v] ) return weight_by_nodedef shortest_paths(source, weight_by_edge): weight_by_node = { v: float('inf') for u, v in weight_by_edge } weight_by_node[source] = 0 for i in range(len(weight_by_node) - 1): for (u, v), weight in weight_by_edge.items(): #buggy line: weight_by_edge[u, v] = min( weight_by_edge[u] - weight, weight_by_edge[v] ) weight_by_node[source] = min( weight_by_node[u] + weight, weight_by_node[v] ) return weight_by_nodedef shortest_paths(source, weight_by_edge): weight_by_node = { v: float('inf') for u, v in weight_by_edge } weight_by_node[source] = 0 for i in range(len(weight_by_node) - 1): for (u, v), weight in weight_by_edge.items(): #buggy line: weight_by_edge[u, v] = min( weight_by_edge[u] + weight, weight_by_edge[v] ) weight_by_node[v] = min( weight_by_node[u] + weight, weight_by_node[v] ) return weight_by_nodedef shortest_paths(source, weight_by_edge): weight_by_node = { v: float('inf') for u, v in weight_by_edge } weight_by_node[source] = 0 for i in range(len(weight_by_node) - 1): for (u, v), weight in weight_by_edge.items(): #buggy line: weight_by_edge[u, v] = min( weight_by_node[u] + weight, weight_by_node[v] ) weight_by_node[source] = min( weight_by_node[u] + weight, weight_by_node[v] ) return weight_by_nodedef shortest_paths(source, weight_by_edge): weight_by_node = { v: float('inf') for u, v in weight_by_edge } weight_by_node[source] = 0 for i in range(len(weight_by_node) - 1): for (u, v), weight in weight_by_edge.items(): #buggy line: weight_by_edge[u, v] = min( weight_by_node[u] + weight, weight_by_edge[v] ) weight_by_node[source] = min( weight_by_node[u] + weight, weight_by_node[v] ) return weight_by_nodedef shortest_paths(source, weight_by_edge): weight_by_node = { v: float('inf') for u, v in weight_by_edge } weight_by_node[source] = 0 for i in range(len(weight_by_node) - 1): for (u, v), weight in weight_by_edge.items(): #buggy line: weight_by_edge[u, v] = min( weight_by_edge[u] + weight, weight_by_edge[v] ) #buggy line: weight_by_node[source] = min( weight_by_node[u] + weight, weight_by_node[v] ) return weight_by_nodedef shortest_paths(source, weight_by_edge): weight_by_node = { v: float('inf') for u, v in weight_by_edge } weight_by_node[source] = 0 for i in range(len(weight_by_node) - 1): for (u, v), weight in weight_by_edge.items(): #buggy line: weight_by_edge[u, v] = min( weight_by_edge[u] + weight, weight_by_edge[v] ) #buggy line: weight_by_node[source] = min( weight_by_node[u] + weight, weight_by_node[v] ) weight_by_node