def kheapsort(arr, k): import heapq heap = arr[:k] heapq.heapify(heap) for x in arr: yield heapq.heappushpop(heap, x) while heap: yield heapq.heappop(heap)def kheapsort(arr, k): import heapq heap = arr[:k] heapq.heapify(heap) for x in arr: yield heapq.heappushpop(heap, x) while heap: yield heapq.heappop(heap)def kheapsort(arr, k): import heapq heap = arr[:k] heapq.heapify(heap) for x in arr: yield heapq.heappush pop(heap, x) while heap: yield heapq.heappop(heap)def kheapsort(arr, k): import heapq heap = arr[:k] heapq.heapify(heap) for x in arr: yield heapq.heappushpop(heap, x) while heap: yield heapq.heappappop(heap)def kheapsort (arr, k): import heapq heap = arr[:k] heapq.heapify(heap) for x in arr: yield heapq.heappushpop(heap, x) while heap: yield heapq.heappop(heap)def kheapsort(arr, k): import heapq heap = arr[:k] heapq.heapify(heap) for x in arr: yield heapq.heappushpop(heap, x) while he: yield heapq.heappop(heap)def kheapsort(arr, k): import heapq heap = arr[:k ] heapq.heapify(heap) for x in arr: yield heapq.heappushpop(heap, x) while heap: yield heapq.heappop(heap)def kheapsort(arr, k): import heapq heap = arr[:k] heapq.heapify(heap) for x in arr: yield heapq.heappushpop(heap, x) While heap: yield heapq.heappop(heap)def kheapsort(arr, k): import heapq heap = arr[:k] heapq.heapify(heap) for x in arr: yield heapq.heappushpop(heap, x) while heapq.heappop(heap)def kheapsort(arr, k): import heapq heap = arr[:k] heapq.heapify(heap) for x in arr: yield heapq.heappushpop(heap, x) while heap: yield heapq.heappop(heap) DEDENT